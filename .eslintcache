[{"/Users/dhezel/Desktop/Main/projects/weather_app/src/index.js":"1","/Users/dhezel/Desktop/Main/projects/weather_app/src/App.js":"2","/Users/dhezel/Desktop/Main/projects/weather_app/src/reportWebVitals.js":"3","/Users/dhezel/Desktop/Main/projects/weather_app/src/components/TopNavBar.js":"4","/Users/dhezel/Desktop/Main/projects/weather_app/src/components/ForcastCard.js":"5"},{"size":500,"mtime":1612315351930,"results":"6","hashOfConfig":"7"},{"size":1274,"mtime":1614643657543,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612311627620,"results":"9","hashOfConfig":"7"},{"size":1847,"mtime":1612388690131,"results":"10","hashOfConfig":"7"},{"size":1033,"mtime":1614643221561,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ww0rgq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/dhezel/Desktop/Main/projects/weather_app/src/index.js",[],["25","26"],"/Users/dhezel/Desktop/Main/projects/weather_app/src/App.js",["27"],"/Users/dhezel/Desktop/Main/projects/weather_app/src/reportWebVitals.js",[],"/Users/dhezel/Desktop/Main/projects/weather_app/src/components/TopNavBar.js",["28","29"],"import React from 'react';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, Form, FormControl, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../TopNav.css';\n\nclass TopNavBar extends React.Component {\n  constructor(props) { // Allows objects to be created from this class\n    super(props);      // Allows constructor from parent class to be called\n    this.state = {     // Sets the properties of this object\n\n    }\n  }\n\n  render(){\n    return(\n        <div>\n          <div className=\"NavDiv\">\n              <Navbar bg=\"light\" expand=\"lg\">\n                  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                      <Nav.Link href=\"#home\">Home</Nav.Link>\n                      <Nav.Link href=\"#link\">Link</Nav.Link>\n                      <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                      <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                      <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                      </NavDropdown>\n                  </Nav>\n                  <Form inline>\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                      <Button variant=\"outline-success\">Search</Button>\n                  </Form>\n                  </Navbar.Collapse>\n              </Navbar>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default TopNavBar;","/Users/dhezel/Desktop/Main/projects/weather_app/src/components/ForcastCard.js",["30","31"],"import React from 'react';\nimport '../Forcast.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Forcast extends React.Component {\n  constructor(props) { // Allows objects to be created from this class\n    super(props);      // Allows constructor from parent class to be called\n    this.state = {     // Sets the properties of this object\n      temp: props.name,\n      wind_speed: props.wind_speed,\n      humidity: props.humidity,\n      location: props.location\n    }\n  }\n\n  render(){\n    return(\n      <div class=\"row\">\n        <div class=\"card\" style={{width : \"auto\"}}>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{this.state.location}</h5>\n                <h6 class=\"card-subtitle\">{this.state.location}</h6>\n                <p class=\"card-text\">{this.state.wind_speed}</p>\n                <a href=\"#\" class=\"card-link\">Card link</a>\n                <a href=\"#\" class=\"card-link\">Another link</a>\n              </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Forcast;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":2,"column":23,"nodeType":"38","messageId":"39","endLine":2,"endColumn":30},{"ruleId":"36","severity":1,"message":"41","line":2,"column":45,"nodeType":"38","messageId":"39","endLine":2,"endColumn":53},{"ruleId":"42","severity":1,"message":"43","line":24,"column":17,"nodeType":"44","endLine":24,"endColumn":47},{"ruleId":"42","severity":1,"message":"43","line":25,"column":17,"nodeType":"44","endLine":25,"endColumn":47},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'MenuItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]